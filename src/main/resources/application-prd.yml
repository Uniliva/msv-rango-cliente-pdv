server: 
  port: 8080
spring:
   kafka:
     producer:
        bootstrap-servers: ${IP_KAFKA_SERVER}:${KAFKA_PORT}
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.apache.kafka.common.serialization.StringSerializer
     consumer:
        bootstrap-servers:  ${IP_KAFKA_SERVER}:${KAFKA_PORT}
        group-id: grupo_pedido
        auto-offset-reset: earliest
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
   datasource:
    url: jdbc:postgresql://${POSTGRE_URL}:${POSTGRE_PORT}/${POSTGRE_DATABASE}
    username: ${POSTGRE_USER}
    password: ${POSTGRE_PASS}
    
worker:
  status:
    pedido:
      cron: ${STATUS_PEDIDO_CRON}
      
topic:
  kafka:
    fila:
      status: STATUS_PEDIDO
      
auto: 
  create: 
    topics: 
      enable: true